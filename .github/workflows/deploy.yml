name: CI
on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  SQLX_OFFLINE: true

permissions:
  packages: write
  contents: read

jobs:
  check:
    uses: ./.github/workflows/check.yml

  build:
    runs-on: ubuntu-latest
    needs: [check]
    strategy:
      fail-fast: true
      matrix:
        arch: [aarch64, x86_64]
        module: [bot, web]
    steps:
      - name: Check out code into the proper directory
        uses: actions/checkout@v3

      - name: Install cargo
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.arch }}-unknown-linux-musl

      - name: Cache rust
        uses: Swatinem/rust-cache@v2

      - name: Download musl development toolchain for ${{ matrix.arch }}
        run: curl -fsSl https://musl.cc/${{ matrix.arch }}-linux-musl-cross.tgz --output ${{ matrix.arch }}-linux-musl-cross.tgz

      - name: Set up musl-${{ matrix.arch }} development toolchain
        run: tar -xvf ./${{ matrix.arch }}-linux-musl-cross.tgz

      - name: Build executables
        env:
          TARGET_CC: ${{ github.workspace }}/${{ matrix.arch }}-linux-musl-cross/bin/${{ matrix.arch }}-linux-musl-cc
          TARGET_AR: ${{ github.workspace }}/${{ matrix.arch }}-linux-musl-cross/bin/${{ matrix.arch }}-linux-musl-ar
          RUSTFLAGS: -C linker=${{ github.workspace }}/${{ matrix.arch }}-linux-musl-cross/bin/${{ matrix.arch }}-linux-musl-cc
        run: cargo b --release --bin ${{ matrix.module }} --target ${{ matrix.arch }}-unknown-linux-musl

      - name: Upload executables
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.module }}-${{ matrix.arch }}-executables
          path: |
            target/${{ matrix.arch }}-unknown-linux-musl/release/${{ matrix.module }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      fail-fast: false
      matrix:
        module: [bot, web]
    steps:
      - name: Correct env
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Check out code into the proper directory
        uses: actions/checkout@v3

      - name: Download ARM executables
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.module }}-aarch64-executables
          path: ./${{ matrix.module }}/arm64-executables

      - name: Download x86 executables
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.module }}-x86_64-executables
          path: ./${{ matrix.module }}/amd64-executables

      - name: chmod +x
        run: chmod +x ./*executables/*

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build container
        uses: docker/build-push-action@v4
        with:
          context: ./${{ matrix.module }}/
          push: true
          tags: ghcr.io/${{ env.REPO }}-{{ matrix.module }}:latest
          platforms: linux/arm64,linux/amd64
